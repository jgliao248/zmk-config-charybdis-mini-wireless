// Includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>

// Layer Definitions
#define DEF 0
#define QWERTY 1
#define NAV 2
#define SMN 3
#define FUN 4
#define MOU 5
#define SCR 6
#define SNI 7


#define HM_TAPPING_TERM 225
#define HM_TAPPING_TERM_FAST 175
#define HM_PRIOR_IDLE 175

// Layer-Tap and Mod-Tap Config Preferences
&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/* 
 * Combos, Behaviors, and Keymap
 *╭──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────╮
 *   00     01     02     03     04        05     06     07     08     09 
 *├──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┤
 *   10     11     12     13     14        15     16     17     18     19
 *├──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┤
 *   20     21     22     23     24        25     26     27     28     29 
 *╰──────┴──────┴──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┴──────╯
 *                 30     31     32        33     34     35
 *              ╰──────┴──────┴──────╯  ╰─────┴───────┴──────╯
*/

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
        input-processors = <&zip_y_scaler 2 1>, <&zip_x_scaler 4 1>, <&zip_temp_layer 5 400>; // Switch to mouse temp layer
        scroll {
            layers = <6>; // SCROLL
            input-processors = <&zip_xy_scaler 1 5>, <&zip_xy_to_scroll_mapper>, <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    msc {
        acceleration-exponent = <0>;      // 0
        time-to-max-speed-ms = <200>;     // 300
        delay-ms = <5>;                   // 10
    };
    
    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            display-name = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <150>;
        };

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            //hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            //hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            //hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            //hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };
    
    combos {
        compatible = "zmk,combos";

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN>;
        };

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <10 11>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <0 1>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 9>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <20 21>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <28 29>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };

        QwertyTog {
            bindings = <&tog QWERTY>;
            key-positions = <30 31 32>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEF";
            bindings = <
                &kp Q               &kp W           &kp F               &kp P               &kp G                       &kp J                &kp L              &kp U               &kp Y           &mt GRAVE APOS
                &mt LEFT_GUI A      &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T    &kp D                       &kp H                &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E &mt RIGHT_ALT I &mt RIGHT_GUI O
                &kp Z               &kp X           &kp C               &kp V               &kp B                       &kp K                &kp M              &mt SEMI COMMA      &mt COLON DOT   &mt BSLH SLASH
                                                    &lt NAV TAB         &kp ENTER           &mt LEFT_CONTROL DEL        &lt SMN BACKSPACE    &kp SPACE          &kp MINUS    
            >;
        }; 

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
            &kp Q               &kp W               &hm_shift_l EQUAL E     &kp R                       &kp T                      &kp Y         &kp U                       &kp I                      &kp O                  &hm_r PRINTSCREEN P        
            &hm_l LEFT_GUI A    &hm_l LEFT_ALT S    &hm_l LEFT_CONTROL D    &hm_shift_l LEFT_SHIFT F    &kp G                      &kp H         &hm_shift_r RIGHT_SHIFT J   &hm_r RIGHT_CONTROL K      &hm_r RIGHT_ALT L      &hm_r RIGHT_GUI SEMI       
            &kp Z               &kp X               &kp C                   &kp V                       &kp B                      &kp N         &kp M                       &hm_shift_r APOS COMMA     &hm_shift_r EXCL DOT   &hm_shift_r BACKSLASH FSLH 
                            &trans  &trans  &trans    &trans  &trans &trans
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
            &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)           &kp LG(N5)   &kp PRINTSCREEN  &kp BACKSPACE     &kp UP         &kp DELETE    &trans
            &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)           &kp LG(N0)   &kp ENTER        &kp LEFT          &kp DOWN       &kp RIGHT  &trans
            &kp LC(Z)   &kp LC(X)   &kp LC(C)   &mt LC(LS(V)) LC(V)  &kp LC(Y)    &trans           &kp LC(LS(LEFT))  &trans         &kp LS(LC(RIGHT))          &trans
                                            &trans         &trans    &trans       &lt FUN BACKSPACE  &kp LSHFT &trans
            >;
        };

        symnum_layer {
            display-name = "SNM";
            bindings = <
            &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PERCENT     &kp CARET   &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR
            &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
            &trans      &trans      &trans      &trans      &trans          &kp PLUS    &kp MINUS   &kp EQUAL   &kp PIPE    &kp BSLH
                                    &trans      &trans      &trans          &trans      &trans      &trans
            >;
        };

        function_layer {
            display-name = "FUN";
            bindings = <
            &kp ESC  &kp F1  &kp F2  &kp F3  &kp F10    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4
            &kp F12  &kp F4  &kp F5  &kp F6  &kp F11    &out OUT_TOG  &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bt BT_CLR
            &trans   &kp F7  &kp F8  &kp F9  &kp F12    &trans        &trans            &trans             &trans           &trans
                                &trans &trans &trans    &trans        &trans &trans
            >;
        };

        mouse_layer {
            display-name = "MOU";
            bindings = <
            &trans  &trans    &trans    &trans   &trans    &mkp MB4  &mkp MB5    &trans   &trans  &trans
            &trans  &trans    &trans    &trans   &trans    &mkp MB1  &mkp MB2    &trans   &trans  &trans
            &trans  &mo SCR   &mo SNI   &trans   &trans    &trans   &trans    &trans   &trans  &trans
                                &trans    &trans    &trans   &trans    &trans &trans
            >;
        };

        scroll_layer {
            display-name = "SCR";
            bindings = <
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans &trans
            >;
        };
        
        snipe_layer {
            display-name = "SNI";
            bindings = <
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans &trans
            >;
        };


    };
};